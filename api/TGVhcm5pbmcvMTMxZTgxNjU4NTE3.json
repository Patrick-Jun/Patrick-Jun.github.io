{"title":"我踩到了微信小程序里canvas的三个大臭坑","date":"2020-06-06T15:13:31.000Z","date_formatted":{"ll":"Jun 6, 2020","L":"06/06/2020","MM-DD":"06-06"},"link":"Learning/131e81658517","comments":true,"tags":["canvas","微信小程序"],"categories":["Learning"],"updated":"2021-02-27T13:50:45.410Z","content":"<p>这里简要总结一下我在做毕业设计过程中，遇到的canvas（新版2d）的三个大坑：</p>\n<ul>\n<li>微信小程序canvas不支持真机调试</li>\n<li>组件内canvas节点的获取</li>\n<li>真机上canvas的hidden属性问题</li>\n</ul>\n<span id=\"more\"></span>\n<p>其中最后一个问题困扰了一个多月（可怜巴巴的抱怨一下），直奔主题，不再多bb了</p>\n<h2 id=\"微信小程序canvas不支持真机调试\">微信小程序canvas不支持真机调试<a title=\"#微信小程序canvas不支持真机调试\" href=\"#微信小程序canvas不支持真机调试\"></a></h2>\n<blockquote>\n<p>官方回答如下：</p>\n</blockquote>\n<p><img src=\"../images/20200606232646.jpg\" alt=\"image\" class=\"φbs\"></p>\n<p>目前只能使用真机预览，为了有一定的调试效果，可以在关键地方加<code>console.log</code></p>\n<p>手机打开预览的微信小程序时，进入小程序设置，打开debug弹框，通过debug弹窗里的控制台输出记录来观察。</p>\n<h2 id=\"组件内canvas节点的获取\">组件内canvas节点的获取<a title=\"#组件内canvas节点的获取\" href=\"#组件内canvas节点的获取\"></a></h2>\n<p>这也是一个大坑，直接看官方文档：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/canvas.html\">https://developers.weixin.qq.com/miniprogram/dev/component/canvas.html</a></p>\n<p>使用下面的例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// canvas.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">onReady</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> query = wx.createSelectorQuery()</span><br><span class=\"line\">    query.select(<span class=\"string\">&#x27;#myCanvas&#x27;</span>)</span><br><span class=\"line\">      .fields(&#123; <span class=\"attr\">node</span>: <span class=\"literal\">true</span>, <span class=\"attr\">size</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">      .exec(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> canvas = res[<span class=\"number\">0</span>].node</span><br><span class=\"line\">        <span class=\"comment\">//省略</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>我们这时就可以能直接复用这个例子了</p>\n<p>比如我开始写的这样：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取canvas节点</span></span><br><span class=\"line\"><span class=\"comment\"> * nodeID: canvas选择符，如 &#x27;#myCanvas&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> getCanvas = <span class=\"function\"><span class=\"params\">nodeID</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolved, rejected</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> query = wx.createSelectorQuery();</span><br><span class=\"line\">        query.select(nodeID).node(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(res)&#123;</span><br><span class=\"line\">                resolved(res.node)</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                rejected(res)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).exec();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>结果一涉及到组件就出问题了：无法获取到节点</strong></p>\n<p>然后到API文档里看看：</p>\n<p>先看这个文档：</p>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createSelectorQuery.html\">https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createSelectorQuery.html</a></p>\n<blockquote>\n<p>SelectorQuery wx.createSelectorQuery()<br>\n返回一个 SelectorQuery 对象实例。在自定义组件或包含自定义组件的页面中，应使用 this.createSelectorQuery() 来代替。</p>\n</blockquote>\n<p><strong>应使用 this.createSelectorQuery() 来代替</strong></p>\n<p>因此我改了一下方法，这下就可以获取到节点了：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取在组件内或包含自定义组件的页面中的canvas节点</span></span><br><span class=\"line\"><span class=\"comment\"> * nodeID: canvas选择符，如 &#x27;#myCanvas&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> getCanvasWX6B = <span class=\"function\">(<span class=\"params\">nodeID, that</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolved, rejected</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> query = that.createSelectorQuery()</span><br><span class=\"line\">        query.select(nodeID).node(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(res)&#123;</span><br><span class=\"line\">                resolved(res.node)</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                rejected(res)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).exec();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>之后有看到这样一个文档</p>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/wxml/SelectorQuery.html%EF%BC%9A\">https://developers.weixin.qq.com/miniprogram/dev/api/wxml/SelectorQuery.html：</a></p>\n<blockquote>\n<p>SelectorQuery <a href=\"http://SelectorQuery.in\">SelectorQuery.in</a>(Component component)<br>\n将选择器的选取范围更改为自定义组件 <code>component</code> 内。（初始时，选择器仅选取页面范围的节点，不会选取任何自定义组件中的节点）。</p>\n</blockquote>\n<p>因此，还可以写成如下方式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> query = wx.createSelectorQuery().in(<span class=\"keyword\">this</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"真机上canvas的hidden属性问题\">真机上canvas的hidden属性问题<a title=\"#真机上canvas的hidden属性问题\" href=\"#真机上canvas的hidden属性问题\"></a></h2>\n<p>这个问题就是那个困扰我长达一个月的问题，我翻遍了官方文档、开发社区，（期间还误反馈了一个问题：<s> 地图和canvas同时使用时无法获取canvas </s>）</p>\n<p>我先讲讲我的业务需求：我需要在跑步结束后，用户点击右上角或者其他分享，可以直接拿到一张在运动结束时就已经绘制好的图片，这个绘制过程以及绘制完成，用户是不可见的。</p>\n<p>根据我的需求，我必须的隐藏canvas进行绘制分享图，其中官方有个API是<strong>OffscreenCanvas 2d</strong>，但是这都2200年了：</p>\n<p><img src=\"../images/20200606235658.jpg\" alt=\"image\" class=\"φbs\"></p>\n<p>因此，我的代码是这样写的：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- wxml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;2d&quot;</span> <span class=\"attr\">hidden</span>=<span class=\"string\">&quot;&#123;&#123;true&#125;&#125;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;shareMon&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//js</span></span><br><span class=\"line\">Share.getCanvasWX6B(<span class=\"string\">&#x27;#shareMon&#x27;</span>, <span class=\"built_in\">this</span>).then(<span class=\"function\"><span class=\"params\">canvas</span>=&gt;</span>&#123;</span><br><span class=\"line\">    Share.makeShareImg(canvas, run);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>这样写后，在开发工具内能正常绘制分享图，但是这个代码一到真机上就不行了。</p>\n<p>期间通过测试，发现是获取不到节点，因此一个月里，基本都是围绕着<strong>真机上无法获取节点</strong>问题原地转圈，缺万万没有想到是根本没有canvas节点问题。</p>\n<p><strong>根本原因</strong>：加了<code>hidden=&quot;&#123;&#123;true&#125;&#125;&quot;</code>这个属性后，真机上canvas节点根本不会渲染，这和wx:if根本没任何区别，因此这是微信小程序页面渲染的bug。</p>\n<p>我们来看官方文档-条件渲染：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/conditional.html\">https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/conditional.html</a></p>\n<blockquote>\n<p><code>wx:if</code> vs <code>hidden</code></p>\n<p>因为 <code>wx:if</code> 之中的模板也可能包含数据绑定，所以当 <code>wx:if</code> 的条件值切换时，框架有一个局部渲染的过程，因为它会确保条件块在切换时销毁或重新渲染。</p>\n<p>同时 <code>wx:if</code> 也是<strong>惰性的</strong>，如果在初始渲染条件为 <code>false</code>，框架什么也不做，在条件第一次变成真的时候才开始局部渲染。</p>\n<p>相比之下，<code>hidden</code> 就简单的多，组件始终会被渲染，只是简单的控制显示与隐藏。</p>\n<p>一般来说，<code>wx:if</code> 有更高的切换消耗而 <code>hidden</code> 有更高的初始渲染消耗。因此，如果需要频繁切换的情景下，用 <code>hidden</code> 更好，如果在运行时条件不大可能改变则 <code>wx:if</code> 较好。</p>\n</blockquote>\n<p>整体读下来的意思是：使用<code>wx:if=&quot;&#123;&#123;false&#125;&#125;&quot;</code>和<code>hidden=&quot;&#123;&#123;true&#125;&#125;&quot;</code>的视觉效果都是一样的，可以看不到元素。但如果页面初始情况下，前者节点是不会被渲染出来，只有当条件改变成<code>true</code>后才会被渲染，而后者是不管初始设置怎样的值，页面加载时，节点都会被渲染出来，只是进行显示隐藏。</p>\n<p>如果按照此官方文档介绍，那么我之前的代码是没有问题的，但真机上的渲染好像不是按照这样的进行的！</p>\n<p>毕竟规则是他们定的，他们是爸爸，然后我参考：<a href=\"https://github.com/abram-lin/acanvas-weapp\">https://github.com/abram-lin/acanvas-weapp</a></p>\n<p>于是有了三种解决方案：</p>\n<ul>\n<li>\n<p>canvas初始让其显示，绘制图形时，通过js对<code>hidden</code>属性进行控制。缺点：有较明显的闪烁。</p>\n</li>\n<li>\n<p>新建一个绘图组件，canvas不要hidden属性，在组件生命周期加载完成时进行绘图，绘图完成立即调用triggerEvent方法传递图片url，并摧毁该组件。缺点：有一定的性能消耗（同原理项目：<a href=\"https://github.com/kuckboy1994/mp_canvas_drawer%EF%BC%89\">https://github.com/kuckboy1994/mp_canvas_drawer）</a></p>\n</li>\n<li>\n<p>就在本页面进行绘图，去掉hidden属性，这时候如果绘制完成canvas元素肯定会显示出内容的，给它加上css，让它远离可视区域：<code>position: fixed; left: -9999px;</code>  缺点：暂未发现😂</p>\n</li>\n</ul>\n<p>准备PPT迎接答辩</p>\n<p>全剧终！</p>\n","prev":{"title":"【日常】Osu!mania 我双手竟不敌一只猫爪","link":"Life/98dfa8b999c5"},"next":{"title":"来成都你必须了解的“潜规则”","link":"Life/e14dde177628"},"plink":"https://www.zzboy.cn/Learning/131e81658517/","toc":[{"id":"微信小程序canvas不支持真机调试","title":"微信小程序canvas不支持真机调试","index":"1"},{"id":"组件内canvas节点的获取","title":"组件内canvas节点的获取","index":"2"},{"id":"真机上canvas的hidden属性问题","title":"真机上canvas的hidden属性问题","index":"3"}],"reward":true,"copyright":{"author":"Patrick Jun","link":"<a href=\"https://www.zzboy.cn/Learning/131e81658517/\" title=\"我踩到了微信小程序里canvas的三个大臭坑\">https://www.zzboy.cn/Learning/131e81658517/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"June 6, 2020"}}